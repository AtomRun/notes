<?xml version="1.0" encoding="UTF-8"?>
<!-- :beans 前缀  -->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- login.html 不登录也可以访问 -->
	<http pattern="/login.html" security="none"></http>
	<http pattern="/error.html" security="none"></http>


	<!-- 配置页面的拦截规则 -->
	
	<!-- use-expressions="false" 是否启用SPEL表达式。不配置默认是true，如果是true，则下面的标签必须写成
	access="hasRole('ROLE_USER')"
	
	-->
	<http use-expressions="false">
		<!-- pattern 匹配路径
			/*代表这个目录下的所有资源，不包括子目录
			/** 也包括子目录
			
			access 配置角色名称，要求是必须是Role_开头,即当前用户必须有ROLE_USER的角色，才可以访问根目录及所属子目录的资源
		 -->
		<intercept-url pattern="/**" access="ROLE_USER"/>
		
		<!-- 开启表单登录功能
		login-page 配置登录页
		default-target-url 登陆成功后默认调转到的位置 -->
		<form-login login-page="/login.html" default-target-url="/index.html" authentication-failure-url="/error.html"/>
		<!-- 关闭crsf验证 -->
		<csrf disabled="true"/>
	</http>
	
	<!-- 认证管理器 -->
	<authentication-manager>
		<!-- 认证提供者 -->
		<authentication-provider>
			<user-service>
				<!-- 配置当前系统的用户
				name="admin" 用户名
				password="123456" 密码
				authorities  是这个用户属于哪个角色
				 -->
				<user name="admin" password="123456" authorities="ROLE_USER"/>
			</user-service>
		</authentication-provider>
	</authentication-manager>
			
</beans:beans>